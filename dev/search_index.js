var documenterSearchIndex = {"docs":
[{"location":"#Stochastic-Flexibility-Optimization","page":"Flexibility analysis using Stochastic Programing","title":"Stochastic Flexibility Optimization","text":"","category":"section"},{"location":"","page":"Flexibility analysis using Stochastic Programing","title":"Flexibility analysis using Stochastic Programing","text":"Companion repo for paper.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"EditURL = \"https://github.com/PIK-ICoNe/StochasticFlexibility/blob/main/manuscripts/flexibility_by_stochastic_programing.jl\"","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"# Everything runs in the Project environment on the basepath\n\nbasepath = realpath(joinpath((@__DIR__, \"..\")))\n\nusing Pkg\nPkg.activate(basepath)\nPkg.instantiate()\n\nusing DataFrames\nusing CSV\nusing Clp\nusing Statistics","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/#Flexibility-analysis-and-optimization","page":"Main Story","title":"Flexibility analysis and optimization","text":"","category":"section"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"We take an energy system and analyze and optimize its flexibility potential.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"The model is defined in the file sp_model.jl, analysis and utility functions are in the other two files.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"include(joinpath((basepath, \"src\", \"sp_model.jl\")))\ninclude(joinpath((basepath, \"src\", \"plot_utils.jl\")))\ninclude(joinpath((basepath, \"src\", \"evaluation_utils.jl\")))","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"We load timeseries for photovoltaic (pv) and wind potential as well as demand.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"offset = 6531\ntimesteps = 1:168\n\ndata = CSV.read(joinpath((basepath, \"timeseries\", \"basic_example.csv\")), DataFrame)\n\npv = data[timesteps .+ offset, 3]\nwind = data[timesteps .+ offset, 4]\ndemand = data[timesteps .+ offset, 2]\n\ndata = nothing # Free the memory\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"Next we continue the set up. Our model comes with default parameters, which we slightly adjust here. We use some arbitrary values to define a dummy heat demand.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"pars = copy(default_es_pars)\n\naverage_hourly_demand = mean(demand)\n\npars[:recovery_time] = 24\npars[:c_storage] = 100.\npars[:c_pv] = 300.\npars[:c_wind] = 800.\npars[:c_sto_op] = 0.00001\n\nheatdemand = copy(demand)./300.\nheatdemand0 = zeros(length(demand))\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"The model itself is constructed by the function defineenergysystem","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"es = define_energy_system(pv, wind, demand, heatdemand; p = pars, strict_flex = true)\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"This contains investment variables which we collectively call I, and the operational schedule O^t. The total cost given a certain investment I and schedule O^t is denoted C(I O^t).","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"We now can optimize the system, initialy while ignoring flexibility:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"sp_no_flex = instantiate(es, no_flex_pseudo_sampler(), optimizer = Clp.Optimizer)\n\noptimize!(sp_no_flex)\n\nno_flex_decision = optimal_decision(sp_no_flex)\n\nobjective_value(sp_no_flex)\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"overline I_nf  overline O^t_nf = argmin_I O^t C(I O^t)","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"We can now analyse how much flexibility is available at each point in time with this investment and this schedule.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"To do so we distinguish between parts of the operational schedule that can react to a flexibility demand in the moment that it occurs, and those that can only adapt later to help recover the system back towards its previously planned schedule. Essentially into slow components O^st and fast components O^ft","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"O^t = (O^ft O^st)","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"We then consider the cost of the system when confronted with an additional negative or positive demand F at some timepoint t^F. At the timepoint t^F only the fast reacting components can adjust their schedule, the slow components still have to stick to the previous schedule. After the event we give the system a time t_r to recover back to its original schedule. Here the slow components can contribute. Thus we have:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"c(Ft^F) = min_O^t C(overline I_nf O^t F t_f)\nO^st = overline O^t_nf forall t leq t^F t  t^F + t_r\nO^ft = overline O^t_nf forall t  t^F t  t^F + t_r","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"This is the cost of flexibility in the sense of Harder et.al. This optimization is not always feasible. The maximum and minimum F for which it is feasible is called the positive and negative flexibility potential pot_pm. The marginal cost of flexibility is cost_pm(t) = c(pot_pm(t) t)  pot_pm(t). Using our model above we can analyze this in the following way:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"cost_pos, pot_pos, cost_neg, pot_neg = analyze_flexibility_potential(sp_no_flex, 20:50)\n\nplot_flexibility(20:50, cost_pos, pot_pos, cost_neg, pot_neg)\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"Under the hood this uses the evaluate_decision function of stochastic programs that evaluates the cost of a specified scenario given a decision.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"We can go further if we introduce a certain distribution of flexibility demands. Then we can choose to operate the system in such a way that the expected cost, including the expected cost of flexibility, is minimized. This is exactly a two stage stochastic programming problem with c(Ft) as the second stage.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"We can start by taking a simple uniform distribution between some maximum flexibility demand that can occur at any time that leaves enough space for the recovery window:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"n = 100\nF_max = average_hourly_demand * 0.1 # Have unaticipated demand equal to 10% of our typical demand\nt_max = length(pv) - es.parameters[2].defaults[:recovery_time]\n\nscens = simple_flex_sampler(n, F_max, t_max)\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"We can now evaluate the expected cost of running the system determined above with this flexibility distribution.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"sp_flex = instantiate(es, scens, optimizer = Clp.Optimizer)\n\nevaluate_decision(sp_flex, no_flex_decision)\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"This is infinite as the system as built above can not actually provide the desired flexibility at all times. One way to deal with this problem is to regularize the problem, by allowing a heavily penalized deviation from satisfying the extra demand.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"es_reg = define_energy_system(pv, wind, demand, heatdemand; p = pars, strict_flex = false)\n\nsp_reg_flex = instantiate(es_reg, scens, optimizer = Clp.Optimizer)\n\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"Now we can evaluate the expected cost of flexibility in the system:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"evaluate_decision(sp_reg_flex, no_flex_decision)\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"This cost is of course completely dominated by the regularizer. However, using stochastic programming we can optimize the operational schedule to directly optimize this expected cost. To do so we fix the investment to the system we have and then optimize the remaining variables:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"investments_nf = get_investments(sp_no_flex)\nfix_investment!(sp_flex, investments_nf)\nfix_investment!(sp_reg_flex, investments_nf)\n\noptimize!(sp_flex)\noptimize!(sp_reg_flex)\n\nflex_no_invest_decision = optimal_decision(sp_flex)\nreg_flex_no_invest_decision = optimal_decision(sp_reg_flex)\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"Then evaluating the decision we find much more reasonable values:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"evaluate_decision(sp_reg_flex, flex_no_invest_decision)\n\n#\nevaluate_decision(sp_reg_flex, reg_flex_no_invest_decision)\n\n#\n\nrelative_flex_cost = evaluate_decision(sp_reg_flex, flex_no_invest_decision) / objective_value(sp_no_flex) - 1.\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"It is interesting to note that this way servicing the flexibility is actually not very expensive compared to the baseline cost of the system if there were no flexibility demands, with the relative cost of flexibility coming in at 0.2% here.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"We can also again evaluate the amount of flexibility available at each point in time, and the associated cost:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"To find flexibility potentials we right now have to use the unregularized model:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"cost_pos_flex, pot_pos_flex, cost_neg_flex, pot_neg_flex = analyze_flexibility_potential(sp_flex, 20:50)\n\nplot_flexibility(20:50, cost_pos_flex, pot_pos_flex, cost_neg_flex, pot_neg_flex)\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"This shows that the model is not actually able to guarantee that there is flexibility at all times. However, it dramatically increases the amount of available flexibility:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"plt_av = plot();\nflexibility_availability!(plt_av, pot_pos, label = \"positive flexbility unaware\");\nflexibility_availability!(plt_av, pot_pos_flex, label = \"positive flexibility aware\");\nflexibility_availability!(plt_av, pot_neg, label = \"negative flexibility unaware\");\nflexibility_availability!(plt_av, pot_neg_flex, label = \"negative flexibility aware\");\ndisplay(plt_av)\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"We can of course also optimize the overall system investment to take flexibility into account.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"unfix_investment!(sp_flex, investments_nf)\nunfix_investment!(sp_reg_flex, investments_nf)\n\noptimize!(sp_flex)\noptimize!(sp_reg_flex)\n\nflex_invest_decision = optimal_decision(sp_flex)\nreg_flex_invest_decision = optimal_decision(sp_reg_flex)","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"Then the relative cost of the system exposed to flexibility is further reduced:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"evaluate_decision(sp_reg_flex, flex_invest_decision)\n\n#\nevaluate_decision(sp_reg_flex, reg_flex_invest_decision)\n\n#\n\nrelative_flex_cost_inv = evaluate_decision(sp_reg_flex, flex_invest_decision) / objective_value(sp_no_flex) - 1.\n\n#","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"Considering the flexiblity demands at investment time, rather than only during operations lowers the cost of flexibility by:","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"relative_flex_cost_inv / relative_flex_cost - 1.","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"","category":"page"},{"location":"generated/flexibility_by_stochastic_programing/","page":"Main Story","title":"Main Story","text":"This page was generated using Literate.jl.","category":"page"}]
}
